<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="9" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-29T11:19:48 IST" name="Suite" finished-at="2022-09-29T11:19:49 IST" duration-ms="520">
    <groups>
    </groups>
    <test started-at="2022-09-29T11:19:48 IST" name="ChromeTest" finished-at="2022-09-29T11:19:48 IST" duration-ms="211">
      <class name="testNG1.Test1">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:testNG1.Test1@59d016c9]" started-at="2022-09-29T11:19:48 IST" name="beforetest" finished-at="2022-09-29T11:19:48 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:testNG1.Test1@59d016c9]" started-at="2022-09-29T11:19:48 IST" name="beforeclass" finished-at="2022-09-29T11:19:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testNG1.Test1@59d016c9]" started-at="2022-09-29T11:19:48 IST" name="beforemethod" finished-at="2022-09-29T11:19:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="testA()[pri:0, instance:testNG1.Test1@59d016c9]" started-at="2022-09-29T11:19:48 IST" name="testA" finished-at="2022-09-29T11:19:48 IST" duration-ms="10" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at testNG1.Test1.testA(Test1.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testNG1.Test1@59d016c9]" started-at="2022-09-29T11:19:48 IST" name="aftermethod" finished-at="2022-09-29T11:19:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testNG1.Test1@59d016c9]" started-at="2022-09-29T11:19:48 IST" name="beforemethod" finished-at="2022-09-29T11:19:48 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="testB()[pri:0, instance:testNG1.Test1@59d016c9]" started-at="2022-09-29T11:19:48 IST" name="testB" finished-at="2022-09-29T11:19:48 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testNG1.Test1@59d016c9]" started-at="2022-09-29T11:19:48 IST" name="aftermethod" finished-at="2022-09-29T11:19:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:testNG1.Test1@59d016c9]" started-at="2022-09-29T11:19:48 IST" name="afterclass" finished-at="2022-09-29T11:19:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:testNG1.Test1@59d016c9]" started-at="2022-09-29T11:19:48 IST" name="aftertest" finished-at="2022-09-29T11:19:48 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- testNG1.Test1 -->
      <class name="testNG1.Test2">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:testNG1.Test2@4b5a5ed1]" started-at="2022-09-29T11:19:48 IST" name="beforetest" finished-at="2022-09-29T11:19:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:testNG1.Test2@4b5a5ed1]" started-at="2022-09-29T11:19:48 IST" name="beforeclass" finished-at="2022-09-29T11:19:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testNG1.Test2@4b5a5ed1]" started-at="2022-09-29T11:19:48 IST" name="beforemethod" finished-at="2022-09-29T11:19:48 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="testC()[pri:0, instance:testNG1.Test2@4b5a5ed1]" started-at="2022-09-29T11:19:48 IST" name="testC" finished-at="2022-09-29T11:19:48 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testNG1.Test2@4b5a5ed1]" started-at="2022-09-29T11:19:48 IST" name="aftermethod" finished-at="2022-09-29T11:19:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testNG1.Test2@4b5a5ed1]" started-at="2022-09-29T11:19:48 IST" name="beforemethod" finished-at="2022-09-29T11:19:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="testD()[pri:0, instance:testNG1.Test2@4b5a5ed1]" started-at="2022-09-29T11:19:48 IST" name="testD" finished-at="2022-09-29T11:19:48 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testNG1.Test2@4b5a5ed1]" started-at="2022-09-29T11:19:48 IST" name="aftermethod" finished-at="2022-09-29T11:19:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:testNG1.Test2@4b5a5ed1]" started-at="2022-09-29T11:19:48 IST" name="afterclass" finished-at="2022-09-29T11:19:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:testNG1.Test2@4b5a5ed1]" started-at="2022-09-29T11:19:48 IST" name="aftertest" finished-at="2022-09-29T11:19:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- testNG1.Test2 -->
    </test> <!-- ChromeTest -->
    <test started-at="2022-09-29T11:19:49 IST" name="FirefoxTest" finished-at="2022-09-29T11:19:49 IST" duration-ms="47">
      <class name="testNG1.Test1">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:testNG1.Test1@be64738]" started-at="2022-09-29T11:19:49 IST" name="beforetest" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:testNG1.Test1@be64738]" started-at="2022-09-29T11:19:49 IST" name="beforeclass" finished-at="2022-09-29T11:19:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method signature="testA()[pri:0, instance:testNG1.Test1@be64738]" started-at="2022-09-29T11:19:49 IST" name="testA" finished-at="2022-09-29T11:19:49 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at testNG1.Test1.testA(Test1.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testNG1.Test1@be64738]" started-at="2022-09-29T11:19:49 IST" name="beforemethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testNG1.Test1@be64738]" started-at="2022-09-29T11:19:49 IST" name="aftermethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testNG1.Test1@be64738]" started-at="2022-09-29T11:19:49 IST" name="beforemethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="testB()[pri:0, instance:testNG1.Test1@be64738]" started-at="2022-09-29T11:19:49 IST" name="testB" finished-at="2022-09-29T11:19:49 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testNG1.Test1@be64738]" started-at="2022-09-29T11:19:49 IST" name="aftermethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:testNG1.Test1@be64738]" started-at="2022-09-29T11:19:49 IST" name="afterclass" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:testNG1.Test1@be64738]" started-at="2022-09-29T11:19:49 IST" name="aftertest" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- testNG1.Test1 -->
      <class name="testNG1.Test2">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:testNG1.Test2@6f96c77]" started-at="2022-09-29T11:19:49 IST" name="beforetest" finished-at="2022-09-29T11:19:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:testNG1.Test2@6f96c77]" started-at="2022-09-29T11:19:49 IST" name="beforeclass" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testNG1.Test2@6f96c77]" started-at="2022-09-29T11:19:49 IST" name="beforemethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="testC()[pri:0, instance:testNG1.Test2@6f96c77]" started-at="2022-09-29T11:19:49 IST" name="testC" finished-at="2022-09-29T11:19:49 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testNG1.Test2@6f96c77]" started-at="2022-09-29T11:19:49 IST" name="aftermethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testNG1.Test2@6f96c77]" started-at="2022-09-29T11:19:49 IST" name="beforemethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="testD()[pri:0, instance:testNG1.Test2@6f96c77]" started-at="2022-09-29T11:19:49 IST" name="testD" finished-at="2022-09-29T11:19:49 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testNG1.Test2@6f96c77]" started-at="2022-09-29T11:19:49 IST" name="aftermethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:testNG1.Test2@6f96c77]" started-at="2022-09-29T11:19:49 IST" name="afterclass" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:testNG1.Test2@6f96c77]" started-at="2022-09-29T11:19:49 IST" name="aftertest" finished-at="2022-09-29T11:19:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- testNG1.Test2 -->
    </test> <!-- FirefoxTest -->
    <test started-at="2022-09-29T11:19:49 IST" name="MIcrospftEdgeTest" finished-at="2022-09-29T11:19:49 IST" duration-ms="50">
      <class name="testNG1.Test1">
        <test-method is-config="true" signature="beforesiute()[pri:0, instance:testNG1.Test1@418e7838]" started-at="2022-09-29T11:19:48 IST" name="beforesiute" finished-at="2022-09-29T11:19:48 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesiute -->
        <test-method is-config="true" signature="beforetest()[pri:0, instance:testNG1.Test1@418e7838]" started-at="2022-09-29T11:19:49 IST" name="beforetest" finished-at="2022-09-29T11:19:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:testNG1.Test1@418e7838]" started-at="2022-09-29T11:19:49 IST" name="beforeclass" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testNG1.Test1@418e7838]" started-at="2022-09-29T11:19:49 IST" name="beforemethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="testA()[pri:0, instance:testNG1.Test1@418e7838]" started-at="2022-09-29T11:19:49 IST" name="testA" finished-at="2022-09-29T11:19:49 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at testNG1.Test1.testA(Test1.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testNG1.Test1@418e7838]" started-at="2022-09-29T11:19:49 IST" name="aftermethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testNG1.Test1@418e7838]" started-at="2022-09-29T11:19:49 IST" name="beforemethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="testB()[pri:0, instance:testNG1.Test1@418e7838]" started-at="2022-09-29T11:19:49 IST" name="testB" finished-at="2022-09-29T11:19:49 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testNG1.Test1@418e7838]" started-at="2022-09-29T11:19:49 IST" name="aftermethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:testNG1.Test1@418e7838]" started-at="2022-09-29T11:19:49 IST" name="afterclass" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:testNG1.Test1@418e7838]" started-at="2022-09-29T11:19:49 IST" name="aftertest" finished-at="2022-09-29T11:19:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
        <test-method is-config="true" signature="aftersiute()[pri:0, instance:testNG1.Test1@418e7838]" started-at="2022-09-29T11:19:49 IST" name="aftersiute" finished-at="2022-09-29T11:19:49 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersiute -->
      </class> <!-- testNG1.Test1 -->
      <class name="testNG1.Test2">
        <test-method is-config="true" signature="beforesiute()[pri:0, instance:testNG1.Test2@3c419631]" started-at="2022-09-29T11:19:48 IST" name="beforesiute" finished-at="2022-09-29T11:19:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesiute -->
        <test-method is-config="true" signature="beforetest()[pri:0, instance:testNG1.Test2@3c419631]" started-at="2022-09-29T11:19:49 IST" name="beforetest" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:testNG1.Test2@3c419631]" started-at="2022-09-29T11:19:49 IST" name="beforeclass" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testNG1.Test2@3c419631]" started-at="2022-09-29T11:19:49 IST" name="beforemethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="testC()[pri:0, instance:testNG1.Test2@3c419631]" started-at="2022-09-29T11:19:49 IST" name="testC" finished-at="2022-09-29T11:19:49 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testNG1.Test2@3c419631]" started-at="2022-09-29T11:19:49 IST" name="aftermethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testNG1.Test2@3c419631]" started-at="2022-09-29T11:19:49 IST" name="beforemethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="testD()[pri:0, instance:testNG1.Test2@3c419631]" started-at="2022-09-29T11:19:49 IST" name="testD" finished-at="2022-09-29T11:19:49 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testNG1.Test2@3c419631]" started-at="2022-09-29T11:19:49 IST" name="aftermethod" finished-at="2022-09-29T11:19:49 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:testNG1.Test2@3c419631]" started-at="2022-09-29T11:19:49 IST" name="afterclass" finished-at="2022-09-29T11:19:49 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:testNG1.Test2@3c419631]" started-at="2022-09-29T11:19:49 IST" name="aftertest" finished-at="2022-09-29T11:19:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
        <test-method is-config="true" signature="befresiute()[pri:0, instance:testNG1.Test2@3c419631]" started-at="2022-09-29T11:19:49 IST" name="befresiute" finished-at="2022-09-29T11:19:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befresiute -->
      </class> <!-- testNG1.Test2 -->
    </test> <!-- MIcrospftEdgeTest -->
  </suite> <!-- Suite -->
</testng-results>
